; A simple skin demonstrating how to use the DriveList plugin.
; (Very ugly, but it works.)

[Rainmeter]

[Metadata]
Name=MultiDrive.ini
Author=Flying Hyrax
Information=A simple test skin for the DriveList plugin
Version=2014-12-13
License=CC BY-NC-SA 4.0

[Variables]

; == MEASURES ==========================================================

; Parent plugin measure which polls the system for connected drives and keeps
; the drive letters in a list. An UpdateDivider is recommended so that the
; plugin isn't checking for disks unreasonably often. You can specify an Index
; on the parent measure to have it return a letter from the list just like a
; child measure.  If you specify a DefaultString on the parent measure, then
; the children will all use that same default unless they _also_ specify a
; DefaultString with a different value.  FinishAction is executed each time the
; parent finished checking for drives; in this example I have it controlling
; the update cycle of the actual FreeDiskSpace measures.
[MeasureDriveLetter1]
Measure=Plugin
Plugin=DriveList.dll
UpdateDivider=5
DefaultString="parent default"
NumberType=Count
Index=0
Fixed=1
Removable=1
Network=0
FinishAction=[!UpdateMeasureGroup "fdsGroup"][!UpdateMeter *][!Redraw]

; Straightforward child measure.  Specifies MeasureDriveLetter1 as its parent,
; and will return the drive letter at the second position (index 1) in
; MeasureDriveLetter1's list
[MeasureDriveLetter2]
 Measure=Plugin
 Plugin=DriveList.dll
 Parent=MeasureDriveLetter1
 Index=1

; Same as above, only different index and specifies an alternate default String
; value.  In case index 1 is invalid, MeasureDriveLetter2 will use the
; DefaultString from its parent; but if index 2 is invalid, MeasureDriveLetter3
; will use its own DefaultString value.
[MeasureDriveLetter3]
 Measure=Plugin
 Plugin=DriveList.dll
 Parent=MeasureDriveLetter1
 DefaultString="override default"
 Index=2

; You can access the number value from any of the measures by either putting it
; in a Calc measure like this, or by using section variables, like
; '[MeasureDriveLetter1:]' to get the number vaalue from that measure.
[MeasureDriveCount]
 Measure=Calc
 Formula=MeasureDriveLetter1

; Totally average FreeDiskSpace measures.  DynamicVariables is set so that we
; can use the string output of the plugin measures for the 'Drive' settings,
; and updates are disabled since we are updating them with a FinishAction.

[MeasureDiskLabel1]
 Measure=FreeDiskSpace
 Drive=[MeasureDriveLetter1]
 Label=1
 DynamicVariables=1
 UpdateDivider=-1
 Group=fdsGroup

[MeasureDiskFree1]
 Measure=FreeDiskSpace
 Drive=[MeasureDriveLetter1]
 DynamicVariables=1
 UpdateDivider=-1
 Group=fdsGroup

[MeasureDiskLabel2]
 Measure=FreeDiskSpace
 Drive=[MeasureDriveLetter2]
 Label=1
 DynamicVariables=1
 UpdateDivider=-1
 Group=fdsGroup

[MeasureDiskFree2]
 Measure=FreeDiskSpace
 Drive=[MeasureDriveLetter2]
 DynamicVariables=1
 UpdateDivider=-1
 Group=fdsGroup

[MeasureDiskLabel3]
 Measure=FreeDiskSpace
 Drive=[MeasureDriveLetter3]
 Label=1
 DynamicVariables=1
 UpdateDivider=-1
 Group=fdsGroup

[MeasureDiskFree3]
 Measure=FreeDiskSpace
 Drive=[MeasureDriveLetter3]
 DynamicVariables=1
 UpdateDivider=-1
 Group=fdsGroup

; == METERS ============================================================

[StyleAllString]
 AntiAlias=1
 FontFace=Segoe UI
 FontSize=14
 FontColor=250,250,250
 SolidColor=0,0,0,180
 AutoScale=1
 Text="%1 %2B"
 X=r
 Y=R

[MeterDriveCount]
 Meter=String
 MeterStyle=StyleAllString
 MeasureName=MeasureDriveCount
 NumOfDecimals=0
 X=0
 Y=0
 Text="Count: %1"
 DynamicVariables=1

[MeterDisk1]
 Meter=String
 MeterStyle=StyleAllString
 MeasureName=MeasureDiskLabel1
 MeasureName2=MeasureDiskFree1

[MeterDisk2]
 Meter=String
 MeterStyle=StyleAllString
 MeasureName=MeasureDiskLabel2
 MeasureName2=MeasureDiskFree2

[MeterDisk3]
 Meter=String
 MeterStyle=StyleAllString
 MeasureName=MeasureDiskLabel3
 MeasureName2=MeasureDiskFree3
